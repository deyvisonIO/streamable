import z from "zod"

const env = process.env;

const envSchema = z.object({
  DATABASE_URL: z.string(),
  CLERK_SECRET_KEY: z.string(),
  CLERK_WEBHOOK_SECRET: z.string(),
  LIVEKIT_API_URL: z.string(),
  LIVEKIT_API_KEY:  z.string(),
  LIVEKIT_API_SECRET:  z.string(),
  UPLOADTHING_SECRET: z.string(),
  UPLOADTHING_APP_ID: z.string(),
})


const envClientSchema = z.object({
  NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: z.string(),
  NEXT_PUBLIC_CLERK_SIGN_IN_URL: z.string(),
  NEXT_PUBLIC_CLERK_SIGN_UP_URL: z.string(),
  NEXT_PUBLIC_CLERK_AFTER_SIGN_IN_URL: z.string(),
  NEXT_PUBLIC_CLERK_AFTER_SIGN_UP_URL: z.string(),
  NEXT_PUBLIC_LIVEKIT_WS_URL: z.string(),
})

export const envServer = envSchema.parse({
  DATABASE_URL: env.DATABASE_URL,
  CLERK_SECRET_KEY: env.CLERK_SECRET_KEY,
  CLERK_WEBHOOK_SECRET: env.CLERK_WEBHOOK_SECRET,
  LIVEKIT_API_URL: env.LIVEKIT_API_URL,
  LIVEKIT_API_KEY: env.LIVEKIT_API_KEY,
  LIVEKIT_API_SECRET: env.LIVEKIT_API_SECRET,
  UPLOADTHING_SECRET: env.UPLOADTHING_SECRET,
  UPLOADTHING_APP_ID: env.UPLOADTHING_APP_ID
})

export const envPublic = envClientSchema.parse({
  NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: env.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY,
  NEXT_PUBLIC_CLERK_SIGN_IN_URL: env.NEXT_PUBLIC_CLERK_SIGN_IN_URL,
  NEXT_PUBLIC_CLERK_SIGN_UP_URL: env.NEXT_PUBLIC_CLERK_SIGN_UP_URL,
  NEXT_PUBLIC_CLERK_AFTER_SIGN_IN_URL: env.NEXT_PUBLIC_CLERK_AFTER_SIGN_IN_URL,
  NEXT_PUBLIC_CLERK_AFTER_SIGN_UP_URL: env.NEXT_PUBLIC_CLERK_AFTER_SIGN_UP_URL,
  NEXT_PUBLIC_LIVEKIT_WS_URL: env.NEXT_PUBLIC_LIVEKIT_WS_URL,
})
